<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>souaaz - Blog</title><link href="souaaz/" rel="alternate"></link><link href="souaaz/feeds/blog.atom.xml" rel="self"></link><id>souaaz/</id><updated>2017-03-13T00:00:00-04:00</updated><entry><title>Django Resources</title><link href="souaaz/blog/Django%20Resources.html" rel="alternate"></link><published>2017-03-13T00:00:00-04:00</published><updated>2017-03-13T00:00:00-04:00</updated><author><name>Samira Ouaaz</name></author><id>tag:None,2017-03-13:souaaz/blog/Django Resources.html</id><summary type="html">&lt;p&gt;Django&amp;nbsp;Resources&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://gitlab.com/rosarior/awesome-django"&gt;A curated list of awesome Django apps, projects and resources = Awesome&amp;nbsp;Django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://djangopackages.org/"&gt;Django Packages is a directory of reusable apps, sites, tools, and more for your Django&amp;nbsp;projects&lt;/a&gt;&lt;/p&gt;</content><category term="Django"></category><category term="Python"></category><category term="Framework"></category></entry><entry><title>Install Pelican on GitHub</title><link href="souaaz/blog/Install%20Pelican%20on%20GitHub.html" rel="alternate"></link><published>2017-03-13T00:00:00-04:00</published><updated>2017-03-13T00:00:00-04:00</updated><author><name>Samira Ouaaz</name></author><id>tag:None,2017-03-13:souaaz/blog/Install Pelican on GitHub.html</id><summary type="html">&lt;p&gt;Install Pelican on&amp;nbsp;GitHub&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://pedrorodriguez.io/blog/2015/09/15/github-website-with-pelican/"&gt;Check this&amp;nbsp;reference&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Your generated site must be on the master branch to be hosted on Github Pages. This means that most of the code will need to live in a different&amp;nbsp;branch. &lt;/p&gt;
&lt;p&gt;The most important point is that the master branch will get nuked at every deploy so don&amp;#8217;t store any files in the master&amp;nbsp;branch. &lt;/p&gt;
&lt;p&gt;The next thing to do is generate the site using your production&amp;nbsp;settings: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican content -o output -s publishconf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, this has to get published by replacing the contents of the master branch with the contents of the output directory.&amp;nbsp;Run &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to install the utility that will make this&amp;nbsp;easy.&lt;/p&gt;
&lt;p&gt;Then from the source branch&amp;nbsp;run: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will have the effect of nuking the contents of master then copying the contents of output/ to&amp;nbsp;master. &lt;/p&gt;
&lt;p&gt;The last step will be to push this changes to&amp;nbsp;Github: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hopefully you now have a basic site running. There are many Pelican blogs out&amp;nbsp;there.&lt;/p&gt;</content><category term="GitHub"></category><category term="Pelican"></category></entry></feed>